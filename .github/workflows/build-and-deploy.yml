# This is a basic workflow to help you get started with Actions

name: Build and deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, closed] 

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  get-stage:
    runs-on: ubuntu-latest
    outputs:
      stage: ${{ steps.stage.outputs.result }}
      deploy: ${{ steps.check-revert.outputs.should-deploy }}
    steps:

      - name: Check for reverts
        id: check-revert
        uses: './.github/workflows/actions/check-revert'
        with:
          source: ${{ github.ref_name }}
          search: "revert"

      - name: Determine build stage
        id: stage
        run: |
          stage="invalid"
          if [ "${{ github.event_name }}" = "pull_request" ] && [ "${{ github.base_ref }}" = "main" ] && [ "${{ github.head_ref }}" = "staging" ] && ${{ github.event.pull_request.merged }} ; then
              stage="main-branch"
          elif [ "${{ github.ref_name }}" != "main" ] && [ "${{ github.ref_name }}" != 'staging' ] && ! ${{ github.event.pull_request.merged }} ; then
              stage="dev-branch"
          fi
          echo "result=$stage" >> $GITHUB_OUTPUT
      


  deploy:
    needs: get-stage
    if: needs.get-stage.outputs.deploy
    strategy:
      max-parallel: 1
      matrix:
        target: [ development, staging, production ]
        stage: 
          - ${{ needs.get-stage.outputs.stage }}
        exclude:
          - stage: 'invalid'
          - target: development
            stage: 'main-branch'
          - target: staging
            stage: 'dev-branch'
          - target: production
            stage: 'dev-branch'
    runs-on: ubuntu-latest
    environment: ${{ matrix.target }}
    steps:

      - name: Checkout code from repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}
      
      - name: Build ${{ matrix.target }} on ${{ github.head_ref || github.ref_name }} branch
        id: build
        uses: ./.github/workflows/actions/build
        with:
          target: ${{ matrix.target }}
          branch: ${{ github.head_ref || github.ref_name }}
          client-id: ${{ secrets.CLIENT_ID }}
          pat-token: ${{ secrets.PAT_TOKEN }}
        
      - name: Deploy ${{ matrix.target }} on ${{ github.head_ref || github.ref_name }} branch
        uses: ./.github/workflows/actions/deploy
        with:
          target: ${{ matrix.target }}
          branch: ${{ github.head_ref || github.ref_name }}
          tag: ${{ steps.build.outputs.tag }}
          client-id: ${{ secrets.CLIENT_ID }}
          pat-token: ${{ secrets.PAT_TOKEN }}
          partners-token: ${{ secrets.SHOPIFY_CLI_TOKEN }}
    
